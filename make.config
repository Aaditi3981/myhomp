# For NVIDIA CUDA
CUDA_PATH ?= /usr/local/cuda

NVCC = ${CUDA_PATH}/bin/nvcc
NVCC_CFLAGS += -I${CUDA_PATH}/include -I../util -I.
NVCC_LDFLAGS += -L${CUDA_PATH}/lib64 -lcudart

# For OpenCL (need OpenCL icd)
OPENCL_CC = gcc
OPENCL_CFLAGS += -I/usr/include -I../util -I.
OPENCL_LDFLAGS += -L/opt/NVIDIA/cuda/lib64 -lOpenCL

# For C and OpenMP
CC = gcc
CFLAGS += -fopenmp -I../util -I.
LDFLAGS += -L/usr/lib/gcc/x86_64-linux-gnu/4.8.2 -lgomp

# C++
CXX = g++
CXXFLAGS += -fopenmp -I../util -I.

# For icc and icxx
ICC = icc
ICXX = icxx

OBJECTS = homp.o homp_dev.o dev_xthread.o ${APP_OBJECTS}
BIN_FOLDER=bin

.PHONY: clean install

${APP}: $(OBJECTS)
	$(CXX) $^ -o $@ $(NVCC_LDFLAGS) $(OPENCL_LDFLAGS) $(LDFLAGS)

install: ${APP}
	if [ ! -d  ../$(BIN_FOLDER) ]; then mkdir -p ../$(BIN_FOLDER); fi
	cp $< ../$(BIN_FOLDER)

homp.o: ../../runtime/homp.c
	$(CC) $(CFLAGS) -c $< -o $@

dev_xthread.o: ../../runtime/dev_xthread.c
	$(CC) $(CFLAGS) -c $< -o $@

homp_dev.o : ../../runtime/homp_dev.c
	$(CC) $(C_CFLAGS) -c $< -o $@

%.o : %.c
	$(CC) $(CFLAGS) -c $< -o $@

%.o : %.cc
	$(CXX) $(CXXFLAGS) -c $< -o $@

%.o : %.cpp
	$(CXX) $(CXXFLAGS) -c $< -o $@

%.o : %.cu
	$(NVCC) $< $(NVCC_CFLAGS) -c -o $@

clean :
	rm -f ${OBJECTS} ${APP}